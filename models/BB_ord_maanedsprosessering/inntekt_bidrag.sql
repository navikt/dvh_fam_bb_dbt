with inntekt AS (
    SELECT  
        FK_BB_BIDRAGS_PERIODE,
        TYPE_INNTEKT,
        BELOP,
        flagg,
        ROW_NUMBER() OVER (PARTITION BY FK_BB_BIDRAGS_PERIODE, flagg ORDER BY TYPE_INNTEKT) AS NR
    FROM {{ source ('fam_bb', 'fam_bb_inntekts_liste_ord') }}
),

inntekts_typer as (
				   
SELECT
        FK_BB_BIDRAGS_PERIODE,
        MAX(CASE WHEN NR = 1 AND flagg = 'P' THEN TYPE_INNTEKT END) AS P_TYPE_INNTEKT_1,
        MAX(CASE WHEN NR = 1 AND flagg = 'P' THEN BELOP END) AS P_INNTEKT_1,
        MAX(CASE WHEN NR = 2 AND flagg = 'P' THEN TYPE_INNTEKT END) AS P_TYPE_INNTEKT_2,
        MAX(CASE WHEN NR = 2 AND flagg = 'P' THEN BELOP END) AS P_INNTEKT_2,
        MAX(CASE WHEN NR = 3 AND flagg = 'P' THEN TYPE_INNTEKT END) AS P_TYPE_INNTEKT_3,
        MAX(CASE WHEN NR = 3 AND flagg = 'P' THEN BELOP END) AS P_INNTEKT_3,																										
        
        MAX(CASE WHEN NR = 1 AND flagg = 'M' THEN TYPE_INNTEKT END) AS M_TYPE_INNTEKT_1,
        MAX(CASE WHEN NR = 1 AND flagg = 'M' THEN BELOP END) AS M_INNTEKT_1,
        MAX(CASE WHEN NR = 2 AND flagg = 'M' THEN TYPE_INNTEKT END) AS M_TYPE_INNTEKT_2,
        MAX(CASE WHEN NR = 2 AND flagg = 'M' THEN BELOP END) AS M_INNTEKT_2,
        MAX(CASE WHEN NR = 3 AND flagg = 'M' THEN TYPE_INNTEKT END) AS M_TYPE_INNTEKT_3,
        MAX(CASE WHEN NR = 3 AND flagg = 'M' THEN BELOP END) AS M_INNTEKT_3,
        MAX(CASE WHEN NR = 4 AND flagg = 'M' THEN TYPE_INNTEKT END) AS M_TYPE_INNTEKT_4,
        MAX(CASE WHEN NR = 4 AND flagg = 'M' THEN BELOP END) AS M_INNTEKT_4,
        MAX(CASE WHEN NR = 5 AND flagg = 'M' THEN TYPE_INNTEKT END) AS M_TYPE_INNTEKT_5,
        MAX(CASE WHEN NR = 5 AND flagg = 'M' THEN BELOP END) AS M_INNTEKT_5,

        SUM(CASE WHEN flagg = 'P' THEN BELOP ELSE 0 END) AS P_INNTEKT_TOTAL,
        MAX(CASE WHEN flagg = 'P' THEN NR ELSE 0 END) AS P_ANTALL_TYPER,

        SUM(CASE WHEN flagg = 'M' THEN BELOP ELSE 0 END) AS M_INNTEKT_TOTAL,
        MAX(CASE WHEN flagg = 'M' THEN NR ELSE 0 END) AS M_ANTALL_TYPER

    FROM INNTEKT
    GROUP BY FK_BB_BIDRAGS_PERIODE
),

fagsak_inntekt as (
  select
    i.*,
    f.PK_BB_BIDRAGS_PERIODE,
    f.vedtakstidspunkt,
	f.saksnr, f.fk_person1_kravhaver	

  from {{ ref ('fagsak_bidrag') }} f
  left join inntekts_typer i
  on f.PK_BB_BIDRAGS_PERIODE = i.FK_BB_BIDRAGS_PERIODE
),

inntekt_fylt_verdier as (
    SELECT
        FK_BB_BIDRAGS_PERIODE,
        P_INNTEKT_TOTAL, P_ANTALL_TYPER,
        M_INNTEKT_TOTAL, M_ANTALL_TYPER,
		saksnr,fk_person1_kravhaver, vedtakstidspunkt, 
        
        COALESCE(P_TYPE_INNTEKT_1,LAST_VALUE(P_TYPE_INNTEKT_1 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS P_TYPE_INNTEKT_1,														
        COALESCE(P_INNTEKT_1, LAST_VALUE(P_INNTEKT_1 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS P_INNTEKT_1,
        COALESCE(P_TYPE_INNTEKT_2, LAST_VALUE(P_TYPE_INNTEKT_2 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS P_TYPE_INNTEKT_2,
        COALESCE(P_INNTEKT_2, LAST_VALUE(P_INNTEKT_2 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS P_INNTEKT_2,
        COALESCE(P_TYPE_INNTEKT_3, LAST_VALUE(P_TYPE_INNTEKT_3 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS P_TYPE_INNTEKT_3,
        COALESCE(P_INNTEKT_3, LAST_VALUE(P_INNTEKT_3 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS P_INNTEKT_3,

        COALESCE(M_TYPE_INNTEKT_1, LAST_VALUE(M_TYPE_INNTEKT_1 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_TYPE_INNTEKT_1,
        COALESCE(M_INNTEKT_1, LAST_VALUE(M_INNTEKT_1 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_INNTEKT_1,
        COALESCE(M_TYPE_INNTEKT_2, LAST_VALUE(M_TYPE_INNTEKT_2 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_TYPE_INNTEKT_2,
        COALESCE(M_INNTEKT_2, LAST_VALUE(M_INNTEKT_2 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_INNTEKT_2,
        COALESCE(M_TYPE_INNTEKT_3, LAST_VALUE(M_TYPE_INNTEKT_3 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_TYPE_INNTEKT_3,
        COALESCE(M_INNTEKT_3, LAST_VALUE(M_INNTEKT_3 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_INNTEKT_3,
        COALESCE(M_TYPE_INNTEKT_4, LAST_VALUE(M_TYPE_INNTEKT_4 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_TYPE_INNTEKT_4,
        COALESCE(M_INNTEKT_4, LAST_VALUE(M_INNTEKT_4 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_INNTEKT_4,
        COALESCE(M_TYPE_INNTEKT_5, LAST_VALUE(M_TYPE_INNTEKT_5 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_TYPE_INNTEKT_5,
        COALESCE(M_INNTEKT_5, LAST_VALUE(M_INNTEKT_5 IGNORE NULLS) OVER (PARTITION BY fk_person1_kravhaver, saksnr ORDER BY vedtakstidspunkt ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) AS M_INNTEKT_5

    FROM fagsak_inntekt
)

select * 
from inntekt_fylt_verdier